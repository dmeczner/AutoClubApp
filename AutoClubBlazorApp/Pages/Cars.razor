@page "/cars"
@using AutoClubBlazorApp.AutoClubEntities
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage;
@using Microsoft.AspNetCore.Components.Server;

<h3>Cars</h3>
@if (@SelectedOwner == null)
{
    <p><em>Loading..</em></p>
}
else
{
    <h2>@SelectedOwner.FirstName @SelectedOwner.LastName</h2>


    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="10px" class="mt-2 mb-4">
        <RadzenButton ButtonStyle="ButtonStyle.Success" Icon="add_circle_outline" Text="Add New Owner" Click="@InsertRow" Disabled="@(editMode == DataGridEditMode.Single && ownersToInsert.Count() > 0)" />
        <div style="white-space:nowrap; margin-left: 20px ">Edit Mode:</div>
        <RadzenSelectBar @bind-Value="@editMode" TextProperty="Text" ValueProperty="Value" style="margin-right: 16px"
                         Data="@(Enum.GetValues(typeof(DataGridEditMode)).Cast<DataGridEditMode>().Select(t => new { Text = $"{t}", Value = t }))" Size="ButtonSize.Small"
                         Disabled="@(editMode == DataGridEditMode.Multiple && owners.Count() > 1)" />
    </RadzenStack>

    <RadzenDataGrid @ref="ownersGrid" TItem="Owner" Data="@owners" Count="@_count" RowUpdate="@OnUpdateRow" RowCreate="@OnCreateRow" Sort="@Reset" Page="@Reset" Filter="@Reset" AllowFiltering="true" AllowPaging="true" PageSize="3" AllowSorting="true" EditMode="@editMode">
        <Columns>
            <RadzenDataGridColumn TItem="Owner" Property="Id" Title="ID">
                <FooterTemplate>
                    Total owners: <b>@owners.Count()</b>
                </FooterTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Owner" Property="FirstName" Title="First Name">
                <EditTemplate Context="owner">
                    <RadzenTextBox @bind-Value="owner.FirstName" Style="width:200px; display: block" Name="FirstName" MaxLength="200" />
                </EditTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Owner" Property="LastName" Title="Last Name">
                <EditTemplate Context="owner">
                    <RadzenTextBox @bind-Value="owner.LastName" Style="width:200px; display: block" Name="LastName" MaxLength="200" />
                </EditTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Owner" Property="Birthday" Title="Birthday">
                <Template Context="owner">
                    @String.Format("{0:d}", owner.Birthday)
                </Template>
                <EditTemplate Context="owner">
                    <RadzenDatePicker @bind-Value="owner.Birthday" Style="width:100%" />
                </EditTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Owner" Context="owner" Filterable="false" Sortable="false" TextAlign="TextAlign.Right" Frozen="true" FrozenPosition="FrozenColumnPosition.Right" Width="140px">
                <Template Context="owner">
                    <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Medium" Click="@(args => EditRow(owner))" @onclick:stopPropagation="true">
                    </RadzenButton>
                    <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="delete" Variant="Variant.Flat" Shade="Shade.Lighter" Size="ButtonSize.Medium" class="my-1 ms-1" Click="@(args => DeleteRow(owner))" @onclick:stopPropagation="true">
                    </RadzenButton>
                </Template>
                <EditTemplate Context="owner">
                    <RadzenButton Icon="check" ButtonStyle="ButtonStyle.Success" Variant="Variant.Flat" Size="ButtonSize.Medium" Click="@((args) => SaveRow(owner))">
                    </RadzenButton>
                    <RadzenButton Icon="close" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Medium" class="my-1 ms-1" Click="@((args) => CancelEdit(owner))">
                    </RadzenButton>
                    <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="delete" Variant="Variant.Flat" Shade="Shade.Lighter" Size="ButtonSize.Medium" class="my-1 ms-1" Click="@(args => DeleteRow(owner))">
                    </RadzenButton>
                </EditTemplate>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Owner" Context="owner" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Frozen="true" FrozenPosition="FrozenColumnPosition.Right" Width="160px">
                <Template Context="owner">
                    <RadzenButton ButtonStyle="ButtonStyle.Info" Text="Show Cars" Variant="Variant.Flat" Shade="Shade.Lighter" Size="ButtonSize.Medium" class="my-1 ms-1" Click="@(args => OpenCars(owner))" @onclick:stopPropagation="true">
                    </RadzenButton>
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
}
@code {
    [Inject]
    ProtectedSessionStorage sessionStorage { get; set; }
    private Owner SelectedOwner;
    protected override async Task OnInitializedAsync()
    {
        // List<Owner> persons = new List<Owner>();
        // var person1 = new Owner { Id = 1, FirstName = "Max", LastName = "Mustermann", DayOfBirth = new DateTime(1990, 5, 19) };
        // var person2 = new Owner { Id = 2, FirstName = "Sabine", LastName = "Sonntag", DayOfBirth = new DateTime(1992, 4, 29) };
        // persons.Add(person1);
        // persons.Add(person2);

        // _employees = persons;
        // _count = persons.Count;
        await GetOrderID();
        await base.OnInitializedAsync();

    }

    private async Task GetOrderID()
    {
        var result = await sessionStorage.GetAsync<Owner>("SelectedOwner");

        if (result.Success)
        {
            SelectedOwner = result.Value;
            //result;
        }

    }

}
